name: Training Pipeline

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  train_models:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run training pipeline
      env:
        AQICN_API_KEY: ${{ secrets.AQICN_API_KEY }}
        OPENWEATHER_API_KEY: ${{ secrets.OPENWEATHER_API_KEY }}
        HOPSWORKS_API_KEY: ${{ secrets.HOPSWORKS_API_KEY }}
        HOPSWORKS_PROJECT_NAME: ${{ secrets.HOPSWORKS_PROJECT_NAME }}
      run: |
        python -c "from src.feature_engineering.feature_store import FeatureStore; from src.models.model_trainer import ModelTrainer; from src.models.model_registry import ModelRegistry; from src.utils.config import Config; fs = FeatureStore(); for city in Config.CITIES: for target in ['pm25', 'pm10']: X, y = fs.get_training_data(f\"{city['name'].replace(' ', '_').lower()}_view\"); if X is not None and y is not None: trainer = ModelTrainer(target_col=target); models, metrics, best = trainer.train_models(X, y); if best: mr = ModelRegistry(); mr.save_model(models[best], best, metrics[best], city['name'], target);"
